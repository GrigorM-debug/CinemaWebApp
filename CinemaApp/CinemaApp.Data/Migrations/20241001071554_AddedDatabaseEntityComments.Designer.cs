// <auto-generated />
using System;
using CinemaApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaApp.Data.Migrations
{
    [DbContext(typeof(CinemaAppDbContext))]
    [Migration("20241001071554_AddedDatabaseEntityComments")]
    partial class AddedDatabaseEntityComments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CinemaApp.Data.Models.Cinema", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The location of the cinema. Must be at least the minimum length specified.");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The name of the cinema. Must be at least the minimum length specified.");

                    b.HasKey("Id")
                        .HasName("PK_Cinema_Id");

                    b.ToTable("Cinemas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4445db85-b94d-4ace-8ccd-b5b8c0d66fc9"),
                            Location = "Sofia",
                            Name = "Kino Arena"
                        },
                        new
                        {
                            Id = new Guid("4f389851-d6e9-4cd8-9045-4a1bc3c2ecb3"),
                            Location = "Sofia",
                            Name = "Cinema City"
                        },
                        new
                        {
                            Id = new Guid("6551ae12-4c18-4a8a-8d3e-69d46a900020"),
                            Location = "Plovdiv",
                            Name = "Kino Arena"
                        },
                        new
                        {
                            Id = new Guid("afed7bf2-aa76-4a21-a820-65fdbbec7001"),
                            Location = "Stara Zagora",
                            Name = "Mall Gallery"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.CinemaMovie", b =>
                {
                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CinemaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("MovieId", "CinemaId");

                    b.HasIndex("CinemaId");

                    b.ToTable("CinemasMovies");

                    b.HasData(
                        new
                        {
                            MovieId = new Guid("c2832c54-5e13-46e9-9c90-9a8ae7419cf2"),
                            CinemaId = new Guid("4445db85-b94d-4ace-8ccd-b5b8c0d66fc9")
                        },
                        new
                        {
                            MovieId = new Guid("f376e02c-06a7-4f47-9d28-cf327a0b2d98"),
                            CinemaId = new Guid("4f389851-d6e9-4cd8-9045-4a1bc3c2ecb3")
                        },
                        new
                        {
                            MovieId = new Guid("c2832c54-5e13-46e9-9c90-9a8ae7419cf2"),
                            CinemaId = new Guid("6551ae12-4c18-4a8a-8d3e-69d46a900020")
                        },
                        new
                        {
                            MovieId = new Guid("f376e02c-06a7-4f47-9d28-cf327a0b2d98"),
                            CinemaId = new Guid("afed7bf2-aa76-4a21-a820-65fdbbec7001")
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasComment("A brief description of the movie. Must be at least the minimum length specified.");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The director of the movie. Must be at least the minimum length specified.");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasComment("The duration of the movie in minutes.");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasComment("The genre of the movie. Must be at least the minimum length specified.");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2")
                        .HasComment("The release date of the movie.");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("The title of the movie. Must be at least the minimum length specified.");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c2832c54-5e13-46e9-9c90-9a8ae7419cf2"),
                            Description = "After the Empire overpowers the Rebel Alliance, Luke Skywalker begins his Jedi training with Yoda. At the same time, Darth Vader and bounty hunter Boba Fett pursue his friends across the galaxy.",
                            Director = "Irvin Kershner",
                            Duration = 124,
                            Genre = "Action Epic",
                            ReleaseDate = new DateTime(1980, 5, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Star Wars: Episode V - The Empire Strikes Back"
                        },
                        new
                        {
                            Id = new Guid("f376e02c-06a7-4f47-9d28-cf327a0b2d98"),
                            Description = "The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.",
                            Director = "Francis Ford Coppola",
                            Duration = 175,
                            Genre = "Gangster",
                            ReleaseDate = new DateTime(1972, 3, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "The Godfather"
                        });
                });

            modelBuilder.Entity("CinemaApp.Data.Models.CinemaMovie", b =>
                {
                    b.HasOne("CinemaApp.Data.Models.Cinema", "Cinema")
                        .WithMany("CinemasMovies")
                        .HasForeignKey("CinemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Cinema_CinemaMovie_CinemaId");

                    b.HasOne("CinemaApp.Data.Models.Movie", "Movie")
                        .WithMany("CinemasMovies")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cinema");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Cinema", b =>
                {
                    b.Navigation("CinemasMovies");
                });

            modelBuilder.Entity("CinemaApp.Data.Models.Movie", b =>
                {
                    b.Navigation("CinemasMovies");
                });
#pragma warning restore 612, 618
        }
    }
}
